#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
};

&lt {
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    rpi: rpi {
        compatible = "zmk,behavior-hold-tap";
        label = "Require prior idle &mt";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        require-prior-idle-ms = <125>;
        flavor = "tap-preferred";
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp GRAVE      &kp N1  &kp N2    &kp N3    &kp N4  &kp N5    &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp BACKSLASH
&kp TAB        &kp Q   &kp W     &kp E     &kp R   &kp T     &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BACKSPACE
&mt LCTRL ESC  &kp A   &kp S     &kp D     &kp F   &kp G     &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT      &kp Z   &kp X     &kp C     &kp V   &kp B     &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE     &mo 2   &kp LALT  &kp LGUI  &mo 1   &mo 4     &kp ENTER        &kp ENTER  &kp SPACE  &kp RGUI   &mo 4    &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
        };

        layer_1 {
            bindings = <
&kp F11  &kp F1  &kp F2       &kp F3          &kp F4         &kp F5      &mmv MOVE_UP     &kp F6  &kp F7  &kp F8                &kp F9                 &kp F10    &kp F12
&trans   &trans  &kp PAGE_UP  &kp UP          &kp PAGE_DOWN  &kp HOME    &mmv MOVE_DOWN   &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans     &trans
&trans   &trans  &kp LEFT     &kp DOWN_ARROW  &kp RIGHT      &kp END     &mmv MOVE_LEFT   &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS  &kp EQUAL
&trans   &trans  &trans       &trans          &trans         &trans      &mmv MOVE_RIGHT  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans     &trans
&trans   &trans  &trans       &trans          &trans         &trans      &mkp LCLK        &trans  &trans  &trans                &trans                 &trans
            >;

            display-name = "EXTENDED";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_UP     &trans           &trans        &trans        &trans        &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &kp PLUS         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &kp MINUS        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp LCLK        &to 0            &trans        &kp NUMBER_0  &trans        &kp DOT
            >;

            display-name = "NUMBER";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&out OUT_TOG     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &trans  &trans       &trans        &trans  &trans  &bt BT_CLR_ALL  &bt BT_CLR
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI    &trans  &trans       &out OUT_USB  &trans  &trans  &trans          &trans
&trans           &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD    &trans  &trans       &trans        &trans  &trans  &trans          &trans
&trans           &trans           &trans           &trans           &trans           &out OUT_BLE       &trans  &trans       &trans        &trans  &trans  &trans          &trans
&trans           &trans           &trans           &trans           &trans           &bootloader        &trans  &bootloader  &trans        &trans  &trans  &trans
            >;

            display-name = "CONTROL";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
